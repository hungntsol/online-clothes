// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineClothes.Persistence.Context;

#nullable disable

namespace OnlineClothes.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClotheCategoryProductInfo", b =>
                {
                    b.Property<int>("ClotheCategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("ProductsSku")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ClotheCategoriesId", "ProductsSku");

                    b.HasIndex("ProductsSku");

                    b.ToTable("ClotheCategoryProductInfo");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.Aggregate.AccountCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountCarts");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.Aggregate.AccountTokenCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("ExpiredAtStamp")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TokenCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TokenType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccountTokens");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.Aggregate.AccountUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizeEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AccountUsers");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.Aggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SizeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("ProductSku");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.CartItem", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductDetailId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId", "ProductDetailId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ClotheBrand", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ClotheBrands");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ClotheCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ClotheCategories");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ClotheMaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ClotheMaterialTypes");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ProductInCategory", b =>
                {
                    b.Property<string>("ProductSku")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ClotheCategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductSku", "ClotheCategoryId");

                    b.HasIndex("ClotheCategoryId");

                    b.ToTable("ProductInCategories");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ProductInfo", b =>
                {
                    b.Property<string>("Sku")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Sku");

                    b.HasIndex("BrandId");

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("ProductInfo");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ProductInMaterial", b =>
                {
                    b.Property<int>("ClotheDetailId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("ClotheDetailId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("ProductInMaterials");
                });

            modelBuilder.Entity("ClotheCategoryProductInfo", b =>
                {
                    b.HasOne("OnlineClothes.Domain.Entities.ClotheCategory", null)
                        .WithMany()
                        .HasForeignKey("ClotheCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineClothes.Domain.Entities.ProductInfo", null)
                        .WithMany()
                        .HasForeignKey("ProductsSku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.Aggregate.AccountCart", b =>
                {
                    b.HasOne("OnlineClothes.Domain.Entities.Aggregate.AccountUser", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.Aggregate.Product", b =>
                {
                    b.HasOne("OnlineClothes.Domain.Entities.ClotheMaterialType", "MaterialType")
                        .WithMany("ProductDetails")
                        .HasForeignKey("MaterialTypeId");

                    b.HasOne("OnlineClothes.Domain.Entities.ProductInfo", "ProductInfo")
                        .WithMany()
                        .HasForeignKey("ProductSku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");

                    b.Navigation("ProductInfo");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.CartItem", b =>
                {
                    b.HasOne("OnlineClothes.Domain.Entities.Aggregate.AccountCart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ProductInCategory", b =>
                {
                    b.HasOne("OnlineClothes.Domain.Entities.ClotheCategory", "ClotheCategory")
                        .WithMany()
                        .HasForeignKey("ClotheCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineClothes.Domain.Entities.ProductInfo", "ProductInfo")
                        .WithMany()
                        .HasForeignKey("ProductSku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClotheCategory");

                    b.Navigation("ProductInfo");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ProductInfo", b =>
                {
                    b.HasOne("OnlineClothes.Domain.Entities.ClotheBrand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ProductInMaterial", b =>
                {
                    b.HasOne("OnlineClothes.Domain.Entities.Aggregate.Product", "Detail")
                        .WithMany()
                        .HasForeignKey("ClotheDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineClothes.Domain.Entities.ClotheMaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.Aggregate.AccountCart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ClotheBrand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineClothes.Domain.Entities.ClotheMaterialType", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
